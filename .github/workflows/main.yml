################# CONFIGURATIONS #####################################################
# >> Configure BINTRAY RELEASE & NATIVE SNAPSHOT
#   Configure the following secrets/variables (customize the values with your own)
#     BINTRAY_MAVEN_REPO=riccardoblsandbox/jmonkeyengine
#     BINTRAY_USER=riccardo
#     BINTRAY_APIKEY=XXXXXX
#     BINTRAY_LICENSE="BSD 3-Clause"
#####################################################
name: Build F3b
on:
  push:
  pull_request:
  release:
    types: [published]
  
jobs:
  
  Build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

      - name: Clone the repo
        uses: actions/checkout@v2     
        with:
          fetch-depth: 1

      - name: Build with gradle
        run: |
          export VERSION="`if [[ $GITHUB_REF == refs\/tags* ]]; then echo ${GITHUB_REF//refs\/tags\//}; fi`"
          if [ "$VERSION" = "" ];
          then
            branch="`if [[ $GITHUB_REF == refs\/heads* ]]; then echo ${GITHUB_REF//refs\/heads\//}; fi`"
            export VERSION="$branch-SNAPSHOT"
          fi
          gradle build install -xtest -Pin_version="$VERSION" -Dmaven.repo.local="$PWD/dist/maven"

      - name: Upload maven artifacts
        uses: actions/upload-artifact@v2
        with:
          name: maven
          path: dist/maven

      - name: Upload blender addon
        uses: actions/upload-artifact@v2
        with:
          name: io_scene_f3b_blender
          path: blender_f3b

      - name: Upload blender nodes
        uses: actions/upload-artifact@v2
        with:
          name: f3b_blender_nodes
          path: f3b_blender_nodes.blend

  Deploy:
    needs: [Build]
    name: Deploy
    runs-on: ubuntu-18.04
    steps:   
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
    
      - name: Download maven artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: maven
          path: dist/maven
      
      - name: Download blender addon
        uses: actions/download-artifact@v4.1.7
        with:
          name: io_scene_f3b_blender
          path: dist/blender

      - name: Download blender nodes
        uses: actions/download-artifact@v4.1.7
        with:
          name: f3b_blender_nodes
          path: dist/
      
      - name: Create release
        run: |
          ls -l dist
          mkdir -p dist/release
          cd dist/blender
          zip -r ../release/io_scene_f3b.zip * 
          cd ../maven
          zip -r ../release/jme_f3b.zip * 
          cd ..
          zip release/f3b_blender_nodes.blend.zip f3b_blender_nodes.blend


      - name: Upload release
        uses: actions/upload-artifact@master
        with:
          name: release
          path: dist/release
      
      - name: Deploy to github release
        if: github.event_name == 'release'
        run: |
          # We need to get the release id (yeah, it's not the same as the tag)
          echo "${GITHUB_EVENT_PATH}"
          cat ${GITHUB_EVENT_PATH}
          releaseId=$(jq --raw-output '.release.id' ${GITHUB_EVENT_PATH})

          for filename in dist/release/*.zip;
          do
            echo "Upload $filename to release $releaseId"
            url="https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$releaseId/assets?name=$(basename $filename)"
            echo "Upload to $url"
            curl -L \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"$filename" \
            "$url"
          done
            
      - name: Deploy to github packages
        if: github.event_name == 'release'
        run: |
          source .github/actions/tools/uploadToMaven.sh
          uploadAllToMaven dist/maven/ https://maven.pkg.github.com/${GITHUB_REPOSITORY} token ${{ secrets.GITHUB_TOKEN }} 