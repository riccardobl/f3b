// Generated by delombok at Sat Jul 28 16:45:23 CEST 2018
package wf.frk.f3b.jme3.mergers.relations.linkers;

import static wf.frk.f3b.jme3.mergers.relations.LinkerHelpers.getRef1;
import static wf.frk.f3b.jme3.mergers.relations.LinkerHelpers.getRef2;
import com.jme3.scene.Node;
import com.jme3.scene.Spatial;
import f3b.CustomParams.CustomParam;
import f3b.CustomParams.CustomParamList;
import wf.frk.f3b.jme3.mergers.RelationsMerger;
import wf.frk.f3b.jme3.mergers.relations.Linker;
import wf.frk.f3b.jme3.mergers.relations.RefData;

public class CustomParamToSpatial implements Linker {
	@java.lang.SuppressWarnings("all")
	private static final org.apache.logging.log4j.Logger log = org.apache.logging.log4j.LogManager.getLogger(CustomParamToSpatial.class);

	@Override
	public boolean doLink(RelationsMerger loader, RefData data) {
		CustomParamList op1 = getRef1(data, CustomParamList.class);
		Spatial op2 = getRef2(data, Spatial.class);
		if (op1 == null || op2 == null) return false;
		for (CustomParam p : op1.getParamsList()) merge(data.root, loader, p, op2);
		return true;
	}

	protected Spatial merge(Node root, RelationsMerger loader, CustomParam p, Spatial dst) {
		String name = p.getName();
		switch (p.getValueCase()) {
		case VALUE_NOT_SET: 
			dst.setUserData(name, null);
			break;

		case VBOOL: 
			dst.setUserData(name, p.getVbool());
			break;

		case VFLOAT: 
			dst.setUserData(name, p.getVfloat());
			break;

		case VINT: 
			dst.setUserData(name, p.getVint());
			break;

		case VQTR: 
			dst.setUserData(name, wf.frk.f3b.jme3.ext.f3b.TypesExt.toJME(p.getVqtr()));
			break;

		case VSTRING: 
			dst.setUserData(name, p.getVstring());
			break;

		case VVEC2: 
			dst.setUserData(name, wf.frk.f3b.jme3.ext.f3b.TypesExt.toJME(p.getVvec2()));
			break;

		case VVEC3: 
			dst.setUserData(name, wf.frk.f3b.jme3.ext.f3b.TypesExt.toJME(p.getVvec3()));
			break;

		case VVEC4: 
			dst.setUserData(name, wf.frk.f3b.jme3.ext.f3b.TypesExt.toJME(p.getVvec4()));
			break;

		default: 
			log.warn("Material doesn\'t support parameter : {} of type {}", name, p.getValueCase().name());
		}
		return dst;
	}
}
